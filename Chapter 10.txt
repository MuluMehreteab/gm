const question = document.querySelector('#question');
const choices = Array.from(document.querySelectorAll('.choice-text'));
const progressText = document.querySelector('#progressText');
const scoreText = document.querySelector('#score');
const progressBarFull = document.querySelector('#progressBarFull');

let currentQuestion = {}
let acceptingAnswers = true
let score = 0
let questionCounter = 0
let availableQuestions = []

let questions = [

    {
        question:
        "1. The primary purpose of an EGP is to ______.",
        choice1: 'Handle large routing tables.',
        choice2: 'Distribute routing information between ASes.',
        choice3: 'Support routing inside a large enterprise network.',
        choice4: 'Provide a default route to the Internet.',
        answer: 2,
        },							
        {
        question:
        "2. Which of the following is false regarding ASes?",
        choice1: 'The assignment of public AS numbers is controlled by RIRs.',
        choice2: '65,001 is a private AS number.',
        choice3: 'An IGP is required for routing within the AS.',
        choice4: 'The AS usually contain routers under the control of different administrative groups.',
        answer: 4,
        },							
        {
        question:
        "3. Which logical interface is preferred for creating internal BGP sessions?",
        choice1: 'Ethernet interface',
        choice2: 'Chassis interface',
        choice3: 'MAC address',
        choice4: 'System interface',
        answer: 4,
        },							
        {
        question:
        "4. Which of the following is true regarding BGP neighbors?",
        choice1: 'They can be discovered automatically.',
        choice2: 'They need to be directly connectecd',
        choice3: 'They can be in the same or different AS.',
        choice4: 'Not all internal BGP speakers need to have the same information about routes outside the AS.',
        answer: 3,
        },							
        {
        question:
        "5. Two BGP routers configured as neighbors communicate using ______.",
        choice1: 'TCP on a variable port',
        choice2: 'UDP on a fixed port',
        choice3: 'TCP on a fixed port',
        choice4: 'IP using a fixed protocol',
        answer: 3,
        },							
        {
        question:
        "6. The primary purpose of iBGP is ______.",
        choice1: 'To ensure that routers inside an AS have a common view of networks outside the AS',
        choice2: 'To ensure that the IGP has multiple exit points from an AS',
        choice3: 'To serve as back-up routers to eBGP',
        choice4: 'To exchange routes with external ASes',
        answer: 1,
        },							
        {
        question:"7. By default, BGP will choose the best path to a given network destination based on ______.",
        choice1: 'The sum of the interface speeds to a destination',
        choice2: 'The shortest AS path',
        choice3: 'The AS that is configured with special non-discretionary attributes',
        choice4: 'The AS that re-distributed the route from OSPF into BGP',
        answer: 2,
        },							
        {
        question:
        "8. Once BGP peers establish a connection, they send routing updates to each other using ______.",
        choice1: 'A keep alive message',
        choice2: 'A next-hop update',
        choice3: 'An update message',
        choice4: 'A networks message',
        answer: 3,
        },							
        {
        question:
        "9. By looking only at the BGP configuration statements on two routers, you can tell if they are iBGP peers or eBGP peers because ______.",
        choice1: 'The statement says iBGP or eBGP.',
        choice2: 'The statement contains the word internal or external.',
        choice3: 'Internal peering statements are configured separately. ',
        choice4: 'The AS number is associated with each peer statement.',
        answer: 4,
        },							
        {
        question:
        "10. The command to display the status of your BGP process is ______.",
        choice1: 'show router bgp process',
        choice2: 'show router bgp summary',
        choice3: 'show router bgp info',
        choice4: 'show router bgp status',
        answer: 2,
        },							
        {
        question:
        "11. In the event that a previously advertised network becomes unreachable, BGP will ______.",
        choice1: 'Advertise the route with a null AS-path.',
        choice2: 'Tear down the peer connection.',
        choice3: 'Send a withdraw message.',
        choice4: 'Update its route table but take no other action.',
        answer: 3,
        },							
        {
        question:
        "12. In which of the following situations would you be least likely to use BGP?",
        choice1: 'A service provider with multiple connections to other providers',
        choice2: 'An enterprise with multiple connections to the same ISP',
        choice3: 'An enterprise with multiple connections to different ISPs',
        choice4: 'A service provider with a single connection to a higher-level ISP',
        answer: 2,
        },							
        {
        question:
        "13. The three well-known mandatory attributes in BGP are ______.",
        choice1: 'Origin, AS-path, and community',
        choice2: 'AS-path, community, and next-hop',
        choice3: 'AS-path, peer, and next-hop',
        choice4: 'AS-path, origin, and next-hop',
        answer: 4,
        },							
        {
        question:
        "14. A BGP router usually does not need to receive a full Internet routing table if ______.",
        choice1: 'It is the single exit point for an AS.',
        choice2: 'It is one of several exit points from an AS.',
        choice3: 'It is part of a transit AS.',
        choice4: 'It is providing updates to downstream providers.',
        answer: 1,
        },							
        {
        question:
        "15. All of the following are reasons that using BGP between ASes is preferable to using IGP route re-distribution except ______.",
        choice1: 'Route re-distribution loses the metrics of the original IGP.',
        choice2: 'Route re-distribution can lead to routing loops.',
        choice3: 'BGP provides a consistent interface for route exchange across various ASes.',
        choice4: 'Route re-distribution provides for greater policy control.',
        answer: 4,
    
    
	
        }
    
]

const SCORE_POINTS = 1
const MAX_QUESTIONS = 20

startGame = () => {
    questionCounter = 0
    score = 0
    availableQuestions = [...questions]
    getNewQuestion()
}

getNewQuestion = () => {
    if(availableQuestions.length === 0 || questionCounter > MAX_QUESTIONS) {
        localStorage.setItem('mostRecentScore', score)

        return window.location.assign('/end.html')
    }

    questionCounter++
    progressText.innerText = `Question ${questionCounter} of ${MAX_QUESTIONS}`
    progressBarFull.style.width = `${(questionCounter/MAX_QUESTIONS) * 100}%`
    
    const questionsIndex = Math.floor(Math.random() * availableQuestions.length)
    currentQuestion = availableQuestions[questionsIndex]
    question.innerText = currentQuestion.question

    choices.forEach(choice => {
        const number = choice.dataset['number']
        choice.innerText = currentQuestion['choice' + number]
    })

    availableQuestions.splice(questionsIndex, 1)

    acceptingAnswers = true
}

choices.forEach(choice => {
    choice.addEventListener('click', e => {
        if(!acceptingAnswers) return

        acceptingAnswers = false
        const selectedChoice = e.target
        const selectedAnswer = selectedChoice.dataset['number']

        let classToApply = selectedAnswer == currentQuestion.answer ? 'correct' : 'incorrect'

        if(classToApply === 'correct') {
            incrementScore(SCORE_POINTS)
        }

        selectedChoice.parentElement.classList.add(classToApply)

        setTimeout(() => {
            selectedChoice.parentElement.classList.remove(classToApply)
            getNewQuestion()

        }, 1000)
    })
})

incrementScore = num => {
    score +=num
    scoreText.innerText = score
}

startGame()